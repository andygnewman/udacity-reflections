This is the third reflections file on using GitHub

Seting up a remote
  Create a new repository on GitHub
  copy the SSH for the repository e.g. git@github.com:andyg72/udacity-reflections.git
  from command line, within the repository;
    git remote add origin [SSH for the repository]
      NOTES: origin is the name for the remote, convention is to call it origin
  
  To check that the remote is set up;
    git remote (-v) # will output the names of the remotes, -v gives the verbose version with full address of the remote
  
  then to synch it up;
    git push (-u) [remote] [branch] # e.g. git push -u origin master
      # pushes the content of the master branch on your local to the remote (i.e. GitHub)
      NOTES: -u sets origin master as the default, so in future push / pulls shoudln't need to state origin master
             master could be replaced for other branches if synching other branches to the remote
             
    git pull (-u) [remote] [branch] # e.g. git pull -u origin master
      # pulls the content of the master branch from the remote (i.e. GitHub) to the local
      
  To clone an existing repository
    from GitHub
      git clone [SSH for repository] # e.g. git clone git@github.com:andyg72/recipes.git
        NOTES: git will automatically set-up a directory, initiate Git and name the remote origin
        
  git branch (-a) # details the branches you have, using -a shows the remote branches also
      
Reflection Questions

When would you create files on GitHub (remote) rather than on Local?
  When a team is working together on a file?

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote 
repository?     
  Because you may not want everything shared at this stage.
  
Differences between forks, clones and branches
  Forks - when building on a pre-existing piece of work that you don't want to impact or don't have permission to interact with
  Clones - copying from an existing GitHub repository to your local for a project that you're working on with other people
  Branches - within a project doing a side piece of work that is still part of the project but you don't want to change the master.
  
What is the benefit of having a copy of the last known state of the remote stored locally?
  So you can see what changes you've made locally since the last push and can verify what subsequent changes have happened to
  the remote since the last time they were synched
